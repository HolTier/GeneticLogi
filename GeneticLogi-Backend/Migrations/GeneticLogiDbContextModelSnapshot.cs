// <auto-generated />
using System;
using GeneticLogi_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GeneticLogi_Backend.Migrations
{
    [DbContext(typeof(GeneticLogiDbContext))]
    partial class GeneticLogiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GeneticLogi_Backend.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EndCityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StartCityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TruckId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("PackageId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.OrderDelivery", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "DeliveryId");

                    b.HasIndex("DeliveryId");

                    b.ToTable("OrderDeliveries");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderDeliveryId")
                        .HasColumnType("integer");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.Property<int>("TruckId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.RouteDelivery", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("integer");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("integer");

                    b.HasKey("RouteId", "DeliveryId");

                    b.HasIndex("DeliveryId");

                    b.ToTable("RouteDeliveries");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.RouteStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer");

                    b.Property<int>("StopOrder")
                        .HasColumnType("integer");

                    b.Property<float>("TravelTime")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("RouteStops");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("MaxHeight")
                        .HasColumnType("real");

                    b.Property<float>("MaxLength")
                        .HasColumnType("real");

                    b.Property<float>("MaxWeight")
                        .HasColumnType("real");

                    b.Property<float>("MaxWidth")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.OrderDelivery", b =>
                {
                    b.HasOne("GeneticLogi_Backend.Models.Delivery", "Delivery")
                        .WithMany("OrderDelivery")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneticLogi_Backend.Models.Order", "Order")
                        .WithMany("OrderDelivery")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Route", b =>
                {
                    b.HasOne("GeneticLogi_Backend.Models.Delivery", null)
                        .WithMany("Route")
                        .HasForeignKey("DeliveryId");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.RouteDelivery", b =>
                {
                    b.HasOne("GeneticLogi_Backend.Models.Delivery", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeneticLogi_Backend.Models.Route", "Route")
                        .WithMany("RouteDelivery")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Delivery", b =>
                {
                    b.Navigation("OrderDelivery");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Order", b =>
                {
                    b.Navigation("OrderDelivery");
                });

            modelBuilder.Entity("GeneticLogi_Backend.Models.Route", b =>
                {
                    b.Navigation("RouteDelivery");
                });
#pragma warning restore 612, 618
        }
    }
}
